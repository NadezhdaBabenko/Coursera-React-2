[{"/Users/a1/Desktop/coursera/React/confusion/src/App.js":"1","/Users/a1/Desktop/coursera/React/confusion/src/index.js":"2","/Users/a1/Desktop/coursera/React/confusion/src/reportWebVitals.js":"3","/Users/a1/Desktop/coursera/React/confusion/src/components/MenuComponent.js":"4","/Users/a1/Desktop/coursera/React/confusion/src/shared/dishes.js":"5","/Users/a1/Desktop/coursera/React/confusion/src/components/DishdetailComponent.js":"6","/Users/a1/Desktop/coursera/React/confusion/src/components/MainComponent.js":"7","/Users/a1/Desktop/coursera/React/confusion/src/components/HeaderComponent.js":"8","/Users/a1/Desktop/coursera/React/confusion/src/components/FooterComponent.js":"9","/Users/a1/Desktop/coursera/React/confusion/src/components/HomeComponent.js":"10","/Users/a1/Desktop/coursera/React/confusion/src/shared/comments.js":"11","/Users/a1/Desktop/coursera/React/confusion/src/shared/promotions.js":"12","/Users/a1/Desktop/coursera/React/confusion/src/shared/leaders.js":"13","/Users/a1/Desktop/coursera/React/confusion/src/components/ContactComponent.js":"14","/Users/a1/Desktop/coursera/React/confusion/src/components/AboutComponent.js":"15","/Users/a1/Desktop/coursera/React/confusion/src/redux/configureStore.js":"16","/Users/a1/Desktop/coursera/React/confusion/src/components/CommentForm.js":"17","/Users/a1/Desktop/coursera/React/confusion/src/redux/dishes.js":"18","/Users/a1/Desktop/coursera/React/confusion/src/redux/comments.js":"19","/Users/a1/Desktop/coursera/React/confusion/src/redux/leaders.js":"20","/Users/a1/Desktop/coursera/React/confusion/src/redux/ActionCreators.js":"21","/Users/a1/Desktop/coursera/React/confusion/src/redux/ActionTypes.js":"22","/Users/a1/Desktop/coursera/React/confusion/src/redux/forms.js":"23","/Users/a1/Desktop/coursera/React/confusion/src/redux/promotions.js":"24","/Users/a1/Desktop/coursera/React/confusion/src/redux/feedbacks.js":"25","/Users/a1/Desktop/coursera/React/confusion/src/components/LoadingComponent.js":"26"},{"size":1100,"mtime":1608742221592,"results":"27","hashOfConfig":"28"},{"size":600,"mtime":1608294601188,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1606923214043,"results":"30","hashOfConfig":"28"},{"size":3676,"mtime":1609772050242,"results":"31","hashOfConfig":"28"},{"size":1448,"mtime":1608307524171,"results":"32","hashOfConfig":"28"},{"size":4549,"mtime":1609847710044,"results":"33","hashOfConfig":"28"},{"size":6993,"mtime":1609855277127,"results":"34","hashOfConfig":"28"},{"size":5409,"mtime":1608740827174,"results":"35","hashOfConfig":"28"},{"size":2793,"mtime":1608391373610,"results":"36","hashOfConfig":"28"},{"size":2402,"mtime":1609848519119,"results":"37","hashOfConfig":"28"},{"size":4117,"mtime":1608307669674,"results":"38","hashOfConfig":"28"},{"size":435,"mtime":1608307641618,"results":"39","hashOfConfig":"28"},{"size":2345,"mtime":1608307654278,"results":"40","hashOfConfig":"28"},{"size":11134,"mtime":1609856041468,"results":"41","hashOfConfig":"28"},{"size":5015,"mtime":1609856728851,"results":"42","hashOfConfig":"28"},{"size":1122,"mtime":1609852900313,"results":"43","hashOfConfig":"28"},{"size":4571,"mtime":1609776823740,"results":"44","hashOfConfig":"28"},{"size":1071,"mtime":1609682704720,"results":"45","hashOfConfig":"28"},{"size":1042,"mtime":1609776624137,"results":"46","hashOfConfig":"28"},{"size":1121,"mtime":1609848121321,"results":"47","hashOfConfig":"28"},{"size":8854,"mtime":1609856092878,"results":"48","hashOfConfig":"28"},{"size":854,"mtime":1609851443315,"results":"49","hashOfConfig":"28"},{"size":162,"mtime":1609685835813,"results":"50","hashOfConfig":"28"},{"size":1091,"mtime":1609771325338,"results":"51","hashOfConfig":"28"},{"size":1053,"mtime":1609852177687,"results":"52","hashOfConfig":"28"},{"size":325,"mtime":1609682989064,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ghy8e5",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/a1/Desktop/coursera/React/confusion/src/App.js",[],"/Users/a1/Desktop/coursera/React/confusion/src/index.js",[],"/Users/a1/Desktop/coursera/React/confusion/src/reportWebVitals.js",[],["112","113"],"/Users/a1/Desktop/coursera/React/confusion/src/components/MenuComponent.js",[],"/Users/a1/Desktop/coursera/React/confusion/src/shared/dishes.js",[],"/Users/a1/Desktop/coursera/React/confusion/src/components/DishdetailComponent.js",[],"/Users/a1/Desktop/coursera/React/confusion/src/components/MainComponent.js",["114","115"],"/Users/a1/Desktop/coursera/React/confusion/src/components/HeaderComponent.js",[],"/Users/a1/Desktop/coursera/React/confusion/src/components/FooterComponent.js",["116"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(props) {\n    return(\n        <div className=\"footer\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">             \n                    <div className=\"col-4 offset-1 col-sm-2\">\n                        <h5>Links</h5>\n                        <ul className=\"list-unstyled\">\n                            <li><Link to='/home'>Home</Link></li>\n                            <li><Link to='/aboutus'>About</Link></li>\n                            <li><Link to='/menu'>Menu</Link></li>\n                            <li><Link to=\"contactus\">Contact Us</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-7 col-sm-5\">\n                        <h5>Our Address</h5>\n                        <address>\n                        121, Clear Water Bay Road<br />\n                        Clear Water Bay, Kowloon<br />\n                        HONG KONG<br />\n                        <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n                        <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n                        <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                            confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-4 align-self-center\">\n                        <div className=\"text-center\">\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">             \n                    <div className=\"col-auto\">\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n} \n\nexport default Footer;","/Users/a1/Desktop/coursera/React/confusion/src/components/HomeComponent.js",[],"/Users/a1/Desktop/coursera/React/confusion/src/shared/comments.js",[],"/Users/a1/Desktop/coursera/React/confusion/src/shared/promotions.js",[],["117","118"],"/Users/a1/Desktop/coursera/React/confusion/src/shared/leaders.js",[],"/Users/a1/Desktop/coursera/React/confusion/src/components/ContactComponent.js",["119","120","121","122","123","124","125","126","127"],"import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, Form, Errors, actions } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        console.log(\"Thank you for your feedback: \" + JSON.stringify(values));\n        alert(\"Thank you for your feedback: \" + JSON.stringify(values));\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\n        this.props.resetFeedbackForm();\n    }\n\n    render() {\n    \n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                    <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                            <h5>Our Address</h5>\n                            <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                            </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us your Feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\"\n                                        id=\"firstname\" \n                                        name=\"firstname\" \n                                        placeholder=\"First Name\" \n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors className=\"text-danger\" \n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\"\n                                        id=\"lastname\" \n                                        name=\"lastname\" \n                                        placeholder=\"Last Name\" \n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                     />\n                                    <Errors className=\"text-danger\" \n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" \n                                        id=\"telnum\" \n                                        name=\"telnum\" \n                                        placeholder=\"Tel. Number\" \n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                        }}\n                                    />\n                                    <Errors className=\"text-danger\" \n                                        model=\".telnum\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\"  \n                                        id=\"email\" \n                                        name=\"email\" \n                                        placeholder=\"Email\" \n                                        className=\"form-control\"\n                                        validators={{\n                                            required, validEmail\n                                        }}\n                                    />\n                                    <Errors className=\"text-danger\" \n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid Email Address'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 6, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\n                                                className=\"form-check-input\"\n                                                 /> { ' ' }\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    <Control.select model=\".contactType\" name=\"contactType\" \n                                        className=\"form-control\">\n                                    <option>Tel.</option>\n                                    <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" \n                                        id=\"message\" \n                                        name=\"message\" \n                                        rows=\"12\" \n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","/Users/a1/Desktop/coursera/React/confusion/src/components/AboutComponent.js",["128"],"import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../shared/baseUrl'; //для получение картинок с сервера\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\nfunction About(props) {\n\n    const leaders = props.leaders.leaders.map((leader) => {\n        console.log()\n        return (\n            <Fade in>\n                <RenderLeader leader={leader}/>\n            </Fade>\n        );\n    });\n\n    function RenderLeader({leader}) {\n        if(leader != null) {\n            return (\n                <Fade in>\n                <div key={leader.id} className=\"col-12 mt-5\">\n                    <Media tag=\"li\" className=\"row\">\n                        <Media left middle className=\"col-12 col-md-2\">\n                            <Media object src={baseUrl + leader.image} alt={leader.name} />\n                        </Media>\n                        <Media body className=\"col-12 col-md-10\">\n                            <Media heading>{leader.name}</Media>\n                            <p>{leader.designation}</p>\n                            <p>{leader.description}</p>\n                        </Media>\n                    </Media>\n              </div>\n              </Fade>\n            );\n        } \n        else {\n            return (\n                <div></div> //ничего не отрисуется на экране\n            )\n        }\n    }\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    <Media list>\n                        <Stagger in>\n                            {leaders}\n                        </Stagger>\n                    </Media>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;","/Users/a1/Desktop/coursera/React/confusion/src/redux/configureStore.js",[],"/Users/a1/Desktop/coursera/React/confusion/src/components/CommentForm.js",["129","130","131"],"/Users/a1/Desktop/coursera/React/confusion/src/redux/dishes.js",[],"/Users/a1/Desktop/coursera/React/confusion/src/redux/comments.js",[],"/Users/a1/Desktop/coursera/React/confusion/src/redux/leaders.js",[],"/Users/a1/Desktop/coursera/React/confusion/src/redux/ActionCreators.js",["132"],"import * as ActionTypes from './ActionTypes'; //import ALL ActionTypes\nimport { DISHES } from '../shared/dishes'; \nimport { baseUrl } from '../shared/baseUrl';\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n}); \n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n    const newComment = { //создается коммент\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    }\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'comments', {//что б отправить коммент на сервер\n        method: 'POST',\n        body: JSON.stringify(newComment), //созданный коммент помещается в тело сообщения отправки\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'same-origin'\n    })\n\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      })\n    .then(response => response.json())\n    .then(response => dispatch(addComment(response)))\n    .catch(error =>  { console.log('post comments', error.message); \n        alert('Your comment could not be posted\\nError: '+error.message); });\n};\n \n//DISHES\nexport const fetchDishes = () => (dispatch) => {// THUNK - выполняет 2 отправки PROMISE\n    dispatch(dishesLoading(true)); //1 ф-ция\n\n    return fetch(baseUrl + 'dishes') //взаимодействие с сервером PROMISE\n        .then(response => {//обработка ошибок #1 когда вы получаете ответ от сервера, но ответ может быть ошибкой с сервера\n            if(response.ok) {// если с ответом все ок, то отправляешь его дальше (преобразование в json)\n                return response;\n            }\n            else {//если есть ошибки, то ..\n                var error = new Error('Error ' + response.status + ' : ' + response.statusText);//создаем новый объект ошибки. status - код ошибки, statusText - описание ошибки  \n                error.response = response;\n                throw error;\n            }\n        }, \n        error => { //обработчик ошибок #2 когда нет связи с сервером\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())//преобразуем входящий ответ в json\n        .then(dishes => dispatch(addDishes(dishes)))//когда получаем ДИШЕС - отправляем полученное в метод addDishes\n        .catch(error => dispatch(dishesFailed(error.message))); //отправим пойманную ошибку в метод  dishesFailed\n}\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    poyload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\n//COMMENTS\nexport const fetchComments = () => (dispatch) => {    \n    return fetch(baseUrl + 'comments')\n        .then(response => {\n            if (response.ok) {\n            return response;\n            } else {\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\n            error.response = response;\n            throw error;\n            }\n        },\n        error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n        })\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\n//PROMOS\nexport const fetchPromos = () => (dispatch) => {\n    \n    dispatch(promosLoading());\n\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n            if (response.ok) {\n            return response;\n            } else {\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\n            error.response = response;\n            throw error;\n            }\n        },\n        error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n        })\n        .then(response => response.json())\n        .then(promos => dispatch(addPromos(promos)))\n        .catch(error => dispatch(promosFailed(error.message)));\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\n//LEADERS\nexport const fetchLeaders = () => (dispatch) => {\n    \n    dispatch(leadersLoading());\n\n    return fetch(baseUrl + 'leaders')\n        .then(response => {\n            if (response.ok) {\n            return response;\n            } else {\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\n            error.response = response;\n            throw error;\n            }\n        },\n        error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n        })\n        .then(response => response.json())\n        .then(leaders => dispatch(addLeaders(leaders)))\n        .catch(error => dispatch(leadersFailed(error.message)));\n}\n\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = (errmess) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n});\n\nexport const addLeaders = (leaders) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n});\n\n//postFeedback\nexport const addFeedback = (feedback) => ({\n    type: ActionTypes.ADD_FEEDBACK,\n    payload: feedback\n}); \n\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\n    const newFeedback = { //создается коммент\n        firstname: firstname,\n        lastname: lastname,\n        telnum: telnum,\n        email: email,\n        agree: agree,\n        contactType: contactType,\n        message: message\n    }\n    newFeedback.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'feedback', {//что б отправить коммент на сервер\n        method: 'POST',\n        body: JSON.stringify(newFeedback), //созданный коммент помещается в тело сообщения отправки\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'same-origin'\n    })\n\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      })\n    .then(response => response.json())\n    .then(response => dispatch(addFeedback(response)))\n    .catch(error =>  { console.log('post feedback', error.message); \n        alert('Your feedback could not be posted\\nError: '+error.message); });\n};\n\n//FEEDBACKS\nexport const fetchFeedbacks = () => (dispatch) => {    \n    return fetch(baseUrl + 'feedback')\n        .then(response => {\n            if (response.ok) {\n            return response;\n            } else {\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\n            error.response = response;\n            throw error;\n            }\n        },\n        error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n        })\n        .then(response => response.json())\n        .then(feedbacks => dispatch(addFeedbacks(feedbacks)))\n        .catch(error => dispatch(feedbacksFailed(error.message)));\n};\n\nexport const feedbacksFailed = (errmess) => ({\n    type: ActionTypes.FEEDBACKS_FAILED,\n    payload: errmess\n});\n\nexport const addFeedbacks = (feedbacks) => ({\n    type: ActionTypes.ADD_FEEDBACKS,\n    payload: feedbacks\n});","/Users/a1/Desktop/coursera/React/confusion/src/redux/ActionTypes.js",[],"/Users/a1/Desktop/coursera/React/confusion/src/redux/forms.js",[],"/Users/a1/Desktop/coursera/React/confusion/src/redux/promotions.js",[],"/Users/a1/Desktop/coursera/React/confusion/src/redux/feedbacks.js",[],"/Users/a1/Desktop/coursera/React/confusion/src/components/LoadingComponent.js",[],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":19,"column":21,"nodeType":"139","messageId":"140","endLine":19,"endColumn":38,"fix":"141"},{"ruleId":"142","severity":1,"message":"143","line":38,"column":5,"nodeType":"144","messageId":"145","endLine":44,"endColumn":6},{"ruleId":"146","severity":1,"message":"147","line":1,"column":17,"nodeType":"148","messageId":"149","endLine":1,"endColumn":26},{"ruleId":"133","replacedBy":"150"},{"ruleId":"135","replacedBy":"151"},{"ruleId":"146","severity":1,"message":"152","line":4,"column":33,"nodeType":"148","messageId":"149","endLine":4,"endColumn":40},{"ruleId":"153","severity":1,"message":"154","line":61,"column":29,"nodeType":"155","endLine":61,"endColumn":71},{"ruleId":"156","severity":1,"message":"157","line":75,"column":37,"nodeType":"155","endLine":83,"endColumn":39},{"ruleId":"156","severity":1,"message":"157","line":98,"column":37,"nodeType":"155","endLine":106,"endColumn":40},{"ruleId":"156","severity":1,"message":"157","line":121,"column":37,"nodeType":"155","endLine":129,"endColumn":39},{"ruleId":"156","severity":1,"message":"157","line":145,"column":37,"nodeType":"155","endLine":153,"endColumn":39},{"ruleId":"156","severity":1,"message":"158","line":168,"column":45,"nodeType":"155","endLine":170,"endColumn":52},{"ruleId":"156","severity":1,"message":"159","line":176,"column":37,"nodeType":"155","endLine":177,"endColumn":66},{"ruleId":"156","severity":1,"message":"160","line":186,"column":37,"nodeType":"155","endLine":190,"endColumn":68},{"ruleId":"146","severity":1,"message":"161","line":5,"column":10,"nodeType":"148","messageId":"149","endLine":5,"endColumn":23},{"ruleId":"156","severity":1,"message":"159","line":45,"column":33,"nodeType":"155","endLine":47,"endColumn":62},{"ruleId":"156","severity":1,"message":"157","line":59,"column":33,"nodeType":"155","endLine":67,"endColumn":35},{"ruleId":"156","severity":1,"message":"160","line":82,"column":33,"nodeType":"155","endLine":84,"endColumn":64},{"ruleId":"146","severity":1,"message":"162","line":2,"column":10,"nodeType":"148","messageId":"149","endLine":2,"endColumn":16},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"no-whitespace-before-property","Unexpected whitespace before property promotions.","MemberExpression","unexpectedWhitespace",{"range":"165","text":"166"},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar",["163"],["164"],"'actions' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","'FadeTransform' is defined but never used.","'DISHES' is defined but never used.","no-global-assign","no-unsafe-negation",[1186,1188],"."]